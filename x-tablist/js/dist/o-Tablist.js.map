{"version":3,"sources":["x-tablist/js/src/o-Tablist.js"],"names":["CustomTablist","node","_NODE","REVERSED","hasAttribute","children","forEach","child","includes","tagName","TypeError","querySelectorAll","panel","tab","document","createElement","summary","querySelector","attributes","attr","removeNamedItem","name","setNamedItem","id","setAttribute","append","childNodes","hidden","after","before","_TABS","map","el","CustomTab","_PANELS","CustomPanel","horizontal","vertical","default","orientation","Math","max","panels","length","open_panel_index","findIndex","open","tabs","select","getAttribute","dir","RangeError","parent","_PARENT","addEventListener","activate","bind","e","prev","preventDefault","prev_tab_index","indexOf","select_tab_index","next","next_tab_index","code","call","tabIndex","attributeChangedCallback","expand","focus","oldValue","newValue","returned","updateRendering","tl","tablist"],"mappings":"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","file":"o-Tablist.js","sourcesContent":["/**\n * A list of tab-panel pairs, wherein all tabs and at most one panel are exposed to the user.\n */\nclass CustomTablist {\n  /**\n   * @summary Construct a new CustomTablist object.\n   * @param   {HTMLElement} node preferrably a `.o-Tablist[role=\"tablist\"][aria-orientation]` element\n   * @throws  {TypeError} if any child elements of the tablist are not `<details>` or script-supporting elements\n   */\n  constructor(node) {\n    /**\n     * @summary The element that this object controls.\n     * @private\n     * @final\n     * @type {HTMLElement}\n     */\n    this._NODE = node\n\n    /**\n     * @summary Do the tabs occur after the panels in source?\n     * @private\n     * @final\n     * @type {boolean}\n     */\n    const REVERSED = this._NODE.hasAttribute('data-reversed')\n\n    // Check proper DOM structure\n    ;[...this._NODE.children].forEach(function (child) {\n      if (!['DETAILS', 'SCRIPT', 'TEMPLATE'].includes(child.tagName)) {\n        throw new TypeError('All children of the tablist must be `<details>` elements or script-supporting elements.');\n      }\n    })\n\n    // Move the tabs (<summary>) outside of the panels (<details>), into the tablist.\n    this._NODE.querySelectorAll('details[role=\"tabpanel\"]').forEach(function (panel) {\n      let tab = document.createElement('div')\n      let summary = panel.querySelector('summary')\n\n      // transfer the attributes\n      ;[...summary.attributes].forEach(function (attr) {\n        summary.attributes.removeNamedItem(attr.name)\n        tab.attributes.setNamedItem(attr)\n      })\n\n      // add new attributes\n      tab.id = `tab-for-${panel.id}`\n      tab.setAttribute('aria-controls', panel.id)\n      panel.setAttribute('aria-labelledby', tab.id)\n\n      // transfer the children\n      tab.append(...summary.childNodes)\n\n      summary.hidden = true\n\n      if (REVERSED) panel.after(tab)\n      else panel.before(tab)\n    }, this)\n\n    /**\n     * @summary The set of tabs.\n     * @private\n     * @final\n     * @type {Array<CustomTablist.CustomTab>}\n     */\n    this._TABS = [...this._NODE.querySelectorAll('div[role=\"tab\"]')].map((el) => new CustomTablist.CustomTab(el, this))\n    /**\n     * @summary The set of panels.\n     * @private\n     * @final\n     * @type {Array<CustomTablist.CustomPanel>}\n     */\n    this._PANELS = [...this._NODE.querySelectorAll('details[role=\"tabpanel\"]')].map((el) => new CustomTablist.CustomPanel(el, this))\n  }\n\n  /**\n   * @summary The set of tabs.\n   * @type {Array<CustomTablist.CustomPanel>}\n   */\n  get tabs() {\n    return this._TABS\n  }\n\n  /**\n   * @summary The set of panels.\n   * @type {Array<CustomTablist.CustomTab>}\n   */\n  get panels() {\n    return this._PANELS\n  }\n\n  /**\n   * @summary The orientation, horizontal or vertical, of this tablist.\n   * @type {string}\n   */\n  get orientation() {\n    return this._NODE.getAttribute('aria-orientation')\n  }\n\n  /**\n   * @summary Set the orientation of this tablist.\n   * @param {string=} dir either `'horizontal'` or `'vertical'`\n   */\n  set orientation(dir) {\n    if (!['horizontal', 'vertical'].includes(dir)) {\n      throw new RangeError('Orientation must be `horizontal` or `vertical`.')\n    }\n    this._NODE.setAttribute('aria-orientation', dir)\n  }\n\n  // /**\n  //  * @summary Whether tabs occur after or before the panels.\n  //  * @type {boolean}\n  //  */\n  // get reversed() {\n  //   return this._reversed\n  // }\n\n  // /**\n  //  * @summary Set whether tabs occur after or before panels in source.\n  //  * @param {boolean} rev should this tablist tab order be reversed?\n  //  */\n  // set reversed(rev) {\n  //   this._reversed = rev\n  // }\n\n  /**\n   * @summary Change the orientation of this tablist.\n   */\n  flip() {\n    let map = {\n      horizontal: 'vertical',\n      vertical: 'horizontal',\n      default : 'horizontal',\n    }\n    this.orientation = map[this.orientation] || map.default\n  }\n\n  // /**\n  //  * @summary Change the orientation of this tablist.\n  //  */\n  // reverse() {\n  //   this.reversed = !this.reversed\n  // }\n\n  /**\n   * @summary Update any children and shadow dom view of this element.\n   * @description This function should be called upon construction and every time the element’s attributes are changed.\n   */\n  updateRendering() {\n    // If all panels are collapsed, select the first tab,\n    // else select the tab of the initially open panel.\n    if (this.panels.length) {\n      let open_panel_index = this.panels.findIndex((panel) => panel.open)\n      this.tabs[Math.max(0, open_panel_index)].select()\n    }\n  }\n}\n\n/**\n * A tab in a tab list.\n * @inner\n */\nCustomTablist.CustomTab = class CustomTab {\n  /**\n   * @summary Construct a new CustomTab object.\n   * @param {HTMLElement} node preferrably a `.o-Tablist__Tab[role=\"tab\"]` element\n   * @param {CustomTablist} parent the containing tablist object\n   */\n  constructor(node, parent) {\n    /**\n     * @summary The element that this object controls.\n     * @private\n     * @final\n     * @type {HTMLElement}\n     */\n    this._NODE = node\n\n    /**\n     * @summary The containing tablist of this tab.\n     * @private\n     * @final\n     * @type {CustomTablist}\n     */\n    this._PARENT = parent\n\n    this._NODE.addEventListener('click', (function (e) {\n      this.activate()\n    }).bind(this))\n\n    this._NODE.addEventListener('keydown', (function (e) {\n      function prev() {\n        e.preventDefault()\n        let prev_tab_index = this._PARENT.tabs.indexOf(this) - 1\n        let select_tab_index = (prev_tab_index >= 0) ? prev_tab_index : this._PARENT.tabs.length - 1\n        this._PARENT.tabs[select_tab_index].activate()\n      }\n      function next() {\n        e.preventDefault()\n        let next_tab_index = this._PARENT.tabs.indexOf(this) + 1\n        let select_tab_index = (next_tab_index < this._PARENT.tabs.length) ? next_tab_index : 0\n        this._PARENT.tabs[select_tab_index].activate()\n      }\n      switch (e.code) {\n        case 'Space':\n          e.preventDefault()\n          this.activate()\n          break;\n        case 'Home':\n          e.preventDefault()\n          this._PARENT.tabs[0].activate()\n          break;\n        case 'End':\n          e.preventDefault()\n          this._PARENT.tabs[this._PARENT.tabs.length - 1].activate()\n          break;\n        case 'ArrowLeft'  : if (this._PARENT.orientation === 'horizontal') { prev.call(this) } break;\n        case 'ArrowRight' : if (this._PARENT.orientation === 'horizontal') { next.call(this) } break;\n        case 'ArrowUp'    : if (this._PARENT.orientation === 'vertical'  ) { prev.call(this) } break;\n        case 'ArrowDown'  : if (this._PARENT.orientation === 'vertical'  ) { next.call(this) } break;\n      }\n    }).bind(this))\n\n      // **CLOSE BUTTONS**\n      // if (this.querySelector('button[value=\"close\"]')) {\n      //   this.querySelector('button[value=\"close\"]').addEventListener('click', function (e) {\n      //     this._panel.remove()\n      //     this.remove()\n      //     tablist.updateRendering()\n      //   })\n      // }\n  }\n\n  /**\n   * @summary Select this tab.\n   */\n  select() {\n    this._NODE.tabIndex = 0\n    this.attributeChangedCallback('tabindex', null, '0')\n\n    this._NODE.setAttribute('aria-selected', 'true')\n    this.attributeChangedCallback('aria-selected', null, 'true')\n\n    this._PARENT.panels[this._PARENT.tabs.indexOf(this)].expand()\n  }\n\n  /**\n   * @summary Select and focus this tab.\n   */\n  activate() {\n    this.select()\n    this._NODE.focus()\n  }\n\n  /**\n   * @override HTMLElement#attributeChangedCallback\n   * @param   {string} name the local name of the attriute changed\n   * @param   {string} oldValue the attribute’s old value, or `null` if it had none\n   * @param   {string} newValue the new value to which to set the attribute, or `null` if it is removed\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    const returned = {\n      'tabindex': function (oldValue, newValue) {\n        if (newValue === '0') {\n          this._PARENT.tabs.forEach(function (tab) {\n            if (tab !== this) {\n              tab._NODE.tabIndex = -1\n              tab.attributeChangedCallback('tabindex', null, '-1')\n            }\n          }, this)\n        }\n      },\n      'aria-selected': function (oldValue, newValue) {\n        if (newValue === 'true') {\n          this._PARENT.tabs.forEach(function (tab) {\n            if (tab !== this) {\n              tab._NODE.setAttribute('aria-selected', 'false')\n              tab.attributeChangedCallback('aria-selected', null, 'false')\n            }\n          }, this)\n        }\n      },\n      default(oldValue, newValue) {},\n    }\n    ;(returned[name] || returned.default).call(this, oldValue, newValue)\n    this.updateRendering()\n  }\n\n  /**\n   * @summary Update any children and shadow dom view of this element.\n   * @description This function should be called upon construction and every time the element’s attributes are changed.\n   */\n  updateRendering() {\n  }\n}\n\n\n/**\n * A panel in a tab list.\n * @inner\n */\nCustomTablist.CustomPanel = class CustomPanel {\n  /**\n   * @summary Construct a new CustomPanel object.\n   * @param {HTMLElement} node preferrably a `.o-Tablist__Panel[role=\"tabpanel\"]` element\n   * @param {CustomTablist} parent the containing tablist object\n   */\n  constructor(node, parent) {\n    /**\n     * @summary The element that this object controls.\n     * @private\n     * @final\n     * @type {HTMLElement}\n     */\n    this._NODE = node\n\n    /**\n     * @summary The containing tablist of this tab.\n     * @private\n     * @final\n     * @type {CustomTablist}\n     */\n    this._PARENT = parent\n  }\n\n  /**\n   * @summary Is this panel open?\n   * @returns {boolean} does the panel have the `[open]` attribute?\n   */\n  get open() {\n    return this._NODE.open\n  }\n\n  /**\n   * @summary Expand this panel.\n   * @description Should only be called when its corresponding tab is selected.\n   */\n  expand() {\n    this._NODE.open = true\n    this.attributeChangedCallback('open', null, '')\n\n    this._NODE.setAttribute('aria-hidden', 'false') // fixes a BUG in which screen readers read collapsed `<details>` panels\n    this.attributeChangedCallback('aria-hidden', null, 'false')\n  }\n\n  /**\n   * @override HTMLElement#attributeChangedCallback\n   * @param   {string} name the local name of the attriute changed\n   * @param   {string} oldValue the attribute’s old value, or `null` if it had none\n   * @param   {string} newValue the new value to which to set the attribute, or `null` if it is removed\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    const returned = {\n      'open': function (oldValue, newValue) {\n        if (newValue === '') {\n          this._PARENT.panels.forEach(function (panel) {\n            if (panel !== this) {\n              panel._NODE.open = false\n              panel.attributeChangedCallback('open', null, null)\n            }\n          }, this)\n        }\n      },\n      'aria-hidden': function (oldValue, newValue) {\n        if (newValue === 'false') {\n          this._PARENT.panels.forEach(function (panel) {\n            if (panel !== this) {\n              panel._NODE.setAttribute('aria-hidden', 'true')\n              panel.attributeChangedCallback('aria-hidden', null, 'true')\n            }\n          }, this)\n        }\n      },\n      default(oldValue, newValue) {},\n    }\n    ;(returned[name] || returned.default).call(this, oldValue, newValue)\n    this.updateRendering()\n  }\n\n  /**\n   * @summary Update any children and shadow dom view of this element.\n   * @description This function should be called upon construction and every time the element’s attributes are changed.\n   */\n  updateRendering() {\n  }\n}\n\n\n// **CLOSE BUTTONS**\n// document.querySelector('#update > button').addEventListener('click', function () {\n//   console.log(document.querySelector('[role=\"tablist\"]').tabs())\n//   document.querySelector('[role=\"tablist\"]').panels()[0].open = false\n// })\n\ndocument.querySelectorAll('.o-Tablist[role=\"tablist\"]').forEach(function (tl) {\n  tl.tablist = new CustomTablist(tl)\n  tl.tablist.updateRendering()\n})\n"]}