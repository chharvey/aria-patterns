{"version":3,"sources":["x-hidden/css/src/h-Hidden.less"],"names":[],"mappings":"AAsCA,UAKE,KAAA,UAJA,sBACE,QAAA,MACA,SAAA,SAGF,iCAAA,UACE,KAAA,EACA,mBAAA","file":"h-Hidden.css","sourcesContent":["\n/*################################*\\\n    h-Hidden.less\n\\*################################*/\n\n\n// Hidden\n//\n// The Hidden Helper visually hides an element.\n// Though the element is hidden from visual media, it is kept\n// in the accessibility tree so that assistive technology such as screen readers\n// can still expose it to users.\n// A [skip link](https://github.com/chharvey/chharvey.github.io/wiki/Accessible-Skip-Links)\n// is a common use case for this pattern.\n//\n// Note: The [`[aria-hidden]` attribute](https://www.w3.org/TR/wai-aria-1.1/#aria-hidden)\n// has the opposite effect:\n// it hides an element from the accessibility tree while keeping it visually exposed.\n// To hide the element from *both* the accessibility tree and visual media, you can use\n// `[class=\"h-Hidden\" aria-hidden=\"true\"]`, or you can use the\n// [`[hidden]` attribute](https://www.w3.org/TR/html52/editing.html#the-hidden-attribute),\n// which is the preferred approach if the element is not\n// <q cite=\"https://www.w3.org/TR/html52/editing.html#the-hidden-attribute\">directly relevant</q>.\n//\n// <header><dl>\n//   <dt>author</dt>  <dd>Chris Harvey</dd>\n//   <dt>updated</dt> <dd><time>2017-02-09</time></dd>\n// </dl></header>\n//\n// Markup:\n// <!--link rel=\"stylesheet\" href=\"/node_modules/aria-patterns/x-hidden/css/dist/h-Hidden.css\"/-->\n// <a class=\"h-Hidden {{ modifier_class }}\" href=\"#0\">skip to main content</a>\n//\n// :focus - On focus, the element returns to static position.\n//\n// Weight: 1\n//\n// Styleguide Helpers.Hidden\n.h-Hidden {\n  &:not(:focus) {\n    display: block; // override elements with `display: contents;`\n    position: absolute;\n  }\n  left: -999999px;\n  @supports (inset-inline-start: 0) {\n    left: 0;\n    inset-inline-start: -999999px;\n  }\n}\n"]}